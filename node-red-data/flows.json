[
    {
        "id": "2170ab3b2dc23946",
        "type": "tab",
        "label": "PCN Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7f19a558fb347076",
        "type": "tab",
        "label": "AAS Server Access",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e6e863e59445af5d",
        "type": "tab",
        "label": "MQTT Flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ab993690910a0e8",
        "type": "mqtt-broker",
        "name": "local rabbitmq-broker",
        "broker": "rabbitmq-broker",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "20683eecfcefd853",
        "type": "ui_tab",
        "name": "AAS PCN Hackathon Demonstrator",
        "icon": "fa-fire",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a16d945cdfc7a673",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "660b35396f343279",
        "type": "ui_group",
        "name": "Current PCN submodel change record",
        "tab": "20683eecfcefd853",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cca9b79ca47e1804",
        "type": "http request",
        "z": "2170ab3b2dc23946",
        "name": "GET PCN records",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1390,
        "y": 580,
        "wires": [
            [
                "311e7872bf6fe1e2"
            ]
        ]
    },
    {
        "id": "bc5e7d7782d2dbd4",
        "type": "comment",
        "z": "2170ab3b2dc23946",
        "name": "Clean E-Bike PCN Records",
        "info": "",
        "x": 940,
        "y": 440,
        "wires": []
    },
    {
        "id": "2753ae15823a9b58",
        "type": "debug",
        "z": "2170ab3b2dc23946",
        "name": "PUT record result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2530,
        "y": 660,
        "wires": []
    },
    {
        "id": "311e7872bf6fe1e2",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "getRecords",
        "func": "var records = msg.payload.value.slice();\n\nvar info = {\n    \"old\": {},\n    \"new\": {}\n};\ninfo.old.length = records.length;\ninfo.old.records = records.slice();\n\n// Use existing records[0] as record JSON template (deep copy)\nvar newRecord = JSON.parse(JSON.stringify(records[0]));\n\n// Change the idShort as identifier to the current record id\nnewRecord.idShort = \"Record__\" + records.length.toString().padStart(4,'0') + \"__\";\n\n// Set the change reason Id type to \"SOFTW\"\nnewRecord.value[4].value[0].value[2].value = msg.changeReason;\n\n// Set the current time as timestamp\nnewRecord.value[10].value = new Date(Date.now()).toISOString();\n\n// Change title in PCN submodel \"idShort\": \"ChangeTitle\"\nnewRecord.value[8].value[0].value[0].text = msg.changeTitle;\n\n// Change detail in PCN submodel \"idShort\": \"ChangeDetail\"\nnewRecord.value[8].value[1].value[0].text = msg.changeDetail;\n\n// Add new PCN record to existing records\nrecords.push(newRecord);\n\n// Add some debug info\ninfo.new.record = newRecord;\ninfo.new.length = records.length;\ninfo.new.records = records;\n\nmsg.payload.value = records;\nmsg.info = info;\nmsg.url = flow.get(\"url\");\nmsg.headers = flow.get(\"headers\");\nmsg.id = flow.get(\"id\");\nmsg.index = msg.payload.value.length - 1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 580,
        "wires": [
            [
                "12040941430b4996"
            ]
        ]
    },
    {
        "id": "e7a85ea19e785148",
        "type": "ui_form",
        "z": "2170ab3b2dc23946",
        "name": "UpdateChangeRecordForm",
        "label": "Update PCN submodel change record",
        "group": "660b35396f343279",
        "order": 10,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Change Title",
                "value": "changeTitle",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Change Detail",
                "value": "changeDetail",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Version",
                "value": "changeVersion",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "IdShort",
                "value": "changeIdShort",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Change Reason",
                "value": "changeReason",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "changeTitle": "",
            "changeDetail": "",
            "changeVersion": "",
            "changeIdShort": "",
            "changeReason": ""
        },
        "payload": "",
        "submit": "update",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 940,
        "y": 580,
        "wires": [
            [
                "5893922182fae339"
            ]
        ]
    },
    {
        "id": "12040941430b4996",
        "type": "http request",
        "z": "2170ab3b2dc23946",
        "name": "PUT PCN records with new record",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1880,
        "y": 540,
        "wires": [
            [
                "2753ae15823a9b58",
                "a5237dda97dc5a5a"
            ]
        ]
    },
    {
        "id": "75c2848d0814c70b",
        "type": "http request",
        "z": "2170ab3b2dc23946",
        "name": "GET PCN records",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1370,
        "y": 800,
        "wires": [
            [
                "713c7d45699b798b",
                "8437615853be2968",
                "be63c50d48eabb1f"
            ]
        ]
    },
    {
        "id": "3fc2e1472a445eef",
        "type": "ui_button",
        "z": "2170ab3b2dc23946",
        "name": "GetCurrentVersionButton",
        "group": "660b35396f343279",
        "order": 8,
        "width": "5",
        "height": "1",
        "passthru": false,
        "label": "Get Current Version",
        "tooltip": "Retrieves the current version of the PCN records",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 930,
        "y": 800,
        "wires": [
            [
                "38d1e2eff9d08cf7"
            ]
        ]
    },
    {
        "id": "713c7d45699b798b",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "getLastRecord",
        "func": "var records = msg.payload.value.slice();\nvar lastRecord = records.pop();\n\nvar returnArray = new Array(6);\n\n// Change record title\nreturnArray[0] = {\n    \"payload\" : lastRecord.value[8].value[0].value[0].text\n};\n\n// Change record timestamp\nreturnArray[1] = {\n    \"payload\" : lastRecord.value[10].value\n};\n\n// Version\nreturnArray[2] = {\n    \"payload\" : msg.payload.value.length\n};\n\n// IdShort\nreturnArray[3] = {\n    \"payload\" : lastRecord.idShort\n};\n\n// Detail\nreturnArray[4] = {\n    \"payload\" : lastRecord.value[8].value[1].value[0].text\n};\n\n// Reason\nreturnArray[5] = {\n    \"payload\" : lastRecord.value[4].value[0].value[2].value\n};\n\nreturn returnArray;",
        "outputs": 6,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 800,
        "wires": [
            [
                "0df03f6bd349afcd"
            ],
            [
                "abc9d99531f72b9a"
            ],
            [
                "3739cd6f4093ba9d"
            ],
            [
                "258f5f8dfef3229e"
            ],
            [
                "51791285bc4bcb27"
            ],
            [
                "6ad36dd2d43f9e2e"
            ]
        ]
    },
    {
        "id": "0df03f6bd349afcd",
        "type": "ui_text",
        "z": "2170ab3b2dc23946",
        "group": "660b35396f343279",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "title",
        "label": "Title:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1870,
        "y": 700,
        "wires": []
    },
    {
        "id": "abc9d99531f72b9a",
        "type": "ui_text",
        "z": "2170ab3b2dc23946",
        "group": "660b35396f343279",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "last timestamp",
        "label": "Last timestamp:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1900,
        "y": 740,
        "wires": []
    },
    {
        "id": "3739cd6f4093ba9d",
        "type": "ui_text",
        "z": "2170ab3b2dc23946",
        "group": "660b35396f343279",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "version",
        "label": "Version:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1880,
        "y": 780,
        "wires": []
    },
    {
        "id": "258f5f8dfef3229e",
        "type": "ui_text",
        "z": "2170ab3b2dc23946",
        "group": "660b35396f343279",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "idShort",
        "label": "IdShort:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1880,
        "y": 820,
        "wires": []
    },
    {
        "id": "51791285bc4bcb27",
        "type": "ui_text",
        "z": "2170ab3b2dc23946",
        "group": "660b35396f343279",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "record detail",
        "label": "Detail:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1890,
        "y": 860,
        "wires": []
    },
    {
        "id": "6ad36dd2d43f9e2e",
        "type": "ui_text",
        "z": "2170ab3b2dc23946",
        "group": "660b35396f343279",
        "order": 7,
        "width": "0",
        "height": "0",
        "name": "reason",
        "label": "Reason:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1870,
        "y": 900,
        "wires": []
    },
    {
        "id": "8437615853be2968",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "presetChangeRecordForm",
        "func": "var records = msg.payload.value.slice();\nvar length = msg.payload.value.length;\nvar lastRecord = records.pop();\n\nvar newRecord = {\n    \"changeTitle\": \"Firmware update V\" + (length + 1) + \" available\",\n    \"changeDetail\": \"Firmware update from version V\" + length\n        + \" to V\" + (length + 1) + \" is available.\",\n    \"changeVersion\": (length + 1),\n    \"changeIdShort\": \"Record__\" + length.toString().padStart(4, '0') + \"__\",\n    \"changeReason\": lastRecord.value[4].value[0].value[2].value\n};\n\nmsg.payload = newRecord;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 680,
        "wires": [
            [
                "e7a85ea19e785148"
            ]
        ]
    },
    {
        "id": "675b9b6a75c35ce6",
        "type": "ui_button",
        "z": "2170ab3b2dc23946",
        "name": "CleanVersionRecordsButton",
        "group": "660b35396f343279",
        "order": 9,
        "width": "5",
        "height": "1",
        "passthru": false,
        "label": "Clean Version Records",
        "tooltip": "Reset of the firmware update PCN",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 940,
        "y": 480,
        "wires": [
            [
                "fba453b2ee448740"
            ]
        ]
    },
    {
        "id": "f7fd89121bfc6273",
        "type": "http request",
        "z": "2170ab3b2dc23946",
        "name": "GET PCN records",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1390,
        "y": 480,
        "wires": [
            [
                "03af2ebead75099f"
            ]
        ]
    },
    {
        "id": "03af2ebead75099f",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "cleanRecords",
        "func": "// Use existing records[0] as record JSON template (deep copy)\nvar firstRecord = JSON.parse(JSON.stringify(msg.payload.value[0]));\n// Change the idShort as identifier to the current record id\nfirstRecord.idShort = \"Record__0000__\";\n// Set the change reason Id type to \"SOFTW\"\nfirstRecord.value[4].value[0].value[2].value = \"SOFTW\";\n// Set the current time as timestamp\nfirstRecord.value[10].value = new Date(Date.now()).toISOString();\n// Change title in PCN submodel \"idShort\": \"ChangeTitle\"\nfirstRecord.value[8].value[0].value[0].text = \"Firmware V1\";\n// Change detail in PCN submodel \"idShort\": \"ChangeDetail\"\nfirstRecord.value[8].value[1].value[0].text = \"The initial firmware version V1 for the device.\";\n\nvar cleanRecords = new Array();\ncleanRecords.push(firstRecord);\n\n// Add initial PCN record to existing records\nmsg.payload.value = cleanRecords;\nmsg.url = flow.get(\"url\");\nmsg.headers = flow.get(\"headers\");\nmsg.id = flow.get(\"id\");\nmsg.index = msg.payload.value.length - 1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 480,
        "wires": [
            [
                "12040941430b4996"
            ]
        ]
    },
    {
        "id": "a5237dda97dc5a5a",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "sendMqttNotification",
        "func": "if(msg.statusCode === 204)\n{\n    msg.topic = global.get(\"messageTopic\");\n    msg.payload = { \n        \"submodel\": { \n            \"id\": msg.id, \n            \"path\": msg.url, \n            \"changeRecord\": msg.url + \"[\"+ msg.index + \"]\"\n            } };\n    return [msg, null];\n}\nelse{\n    // debug output\n    return [null, msg];\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2220,
        "y": 540,
        "wires": [
            [
                "dc4cf8a9b1033dbf"
            ],
            [
                "2753ae15823a9b58"
            ]
        ]
    },
    {
        "id": "dc4cf8a9b1033dbf",
        "type": "mqtt out",
        "z": "2170ab3b2dc23946",
        "name": "publish MQTT notification",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3ab993690910a0e8",
        "x": 2590,
        "y": 480,
        "wires": []
    },
    {
        "id": "2fc9b2830c5533c2",
        "type": "comment",
        "z": "2170ab3b2dc23946",
        "name": "Update E-Bike PCN records with form",
        "info": "",
        "x": 970,
        "y": 540,
        "wires": []
    },
    {
        "id": "fba453b2ee448740",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "setProperties",
        "func": "msg.changeTitle = msg.payload.changeTitle;\nmsg.changeDetail = msg.payload.changeDetail;\nmsg.changeReason = msg.payload.changeReason;\n\nmsg.url = global.get(\"submodelUrl\") + \"/submodel-elements/Records\";\nmsg.headers = {\n    \"ApiKey\": global.get(\"apiKey\")\n};\n\nmsg.id = global.get(\"submodelId\");\n\n// Set properties as const for the flow \nflow.set(\"url\", msg.url);\nflow.set(\"headers\", msg.headers);\nflow.set(\"id\", msg.id);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 480,
        "wires": [
            [
                "f7fd89121bfc6273"
            ]
        ]
    },
    {
        "id": "16b1c224e8a4f8a1",
        "type": "comment",
        "z": "2170ab3b2dc23946",
        "name": "Get the last PCN record as current version",
        "info": "",
        "x": 980,
        "y": 760,
        "wires": []
    },
    {
        "id": "c224ace44026b8ba",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "getBrokerAndTopic",
        "func": "var messageTopic = msg.payload.submodelElements\n    .find(element => element.idShort === \"PcnEventsOutgoing\")\n    .messageTopic;\nvar mqttEndpoint = msg.payload.submodelElements\n    .find(element => element.idShort === \"BrokerInformation\")\n    .value\n    .find(element => element.idShort === \"EndpointMqtt\")\n    .value;\n\nglobal.set(\"mqttEndpoint\", mqttEndpoint);\nglobal.set(\"messageTopic\", messageTopic);\n\nmsg.payload = {\n    \"topic\": messageTopic, \n    \"endpoint\": mqttEndpoint\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 80,
        "wires": [
            [
                "10691686e05e6e7c"
            ]
        ]
    },
    {
        "id": "bb70ac3538ab1aa1",
        "type": "comment",
        "z": "2170ab3b2dc23946",
        "name": "E-Bike Broker Information (by submodel-elements/idShort)",
        "info": "",
        "x": 970,
        "y": 220,
        "wires": []
    },
    {
        "id": "7a97c2bad011d989",
        "type": "http request",
        "z": "2170ab3b2dc23946",
        "name": "GET /submodels",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1530,
        "y": 80,
        "wires": [
            [
                "c224ace44026b8ba"
            ]
        ]
    },
    {
        "id": "10691686e05e6e7c",
        "type": "debug",
        "z": "2170ab3b2dc23946",
        "name": "broker Info",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 80,
        "wires": []
    },
    {
        "id": "a18932adf6d2653d",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "getEnvironmentVariables",
        "func": "var aasServerUrl = env.get(\"AASENVIRONMENTURL\");\nvar apiKey = env.get(\"APIKEY\");\n\n// set default values if environment variables are not set\nif(apiKey === undefined)\n{\n    apiKey = \"A5Z2w$@S%>0M\";\n}\n\nif(aasServerUrl === undefined)\n{\n    aasServerUrl = \"https://mnestix-basyx-repo-b36325a9.azurewebsites.net\";\n}\n\n// set variables globally for the whole node red environment\nglobal.set(\"aasServerUrl\", aasServerUrl);\nglobal.set(\"apiKey\", apiKey);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 80,
        "wires": [
            [
                "dbd049d6f1c88e57"
            ]
        ]
    },
    {
        "id": "173a08f39e282fe3",
        "type": "inject",
        "z": "2170ab3b2dc23946",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "https://meta-level.de/ids/sm/1897_2537_5972_2262",
        "payloadType": "str",
        "x": 710,
        "y": 80,
        "wires": [
            [
                "a18932adf6d2653d"
            ]
        ]
    },
    {
        "id": "dbd049d6f1c88e57",
        "type": "ui_text_input",
        "z": "2170ab3b2dc23946",
        "name": "",
        "label": "Submodel Id",
        "tooltip": "",
        "group": "660b35396f343279",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "5a414d1c0ba0877a"
            ]
        ]
    },
    {
        "id": "5a414d1c0ba0877a",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "setSubmodelUrl",
        "func": "var submodelId = msg.payload;\nvar encodedSubmodelId = base64urlEncode(submodelId);\nvar aasServerUrl = global.get(\"aasServerUrl\");\nvar submodelUrl = aasServerUrl + \"/submodels/\" + encodedSubmodelId;\n\nglobal.set(\"submodelId\", submodelId);\nglobal.set(\"submodelUrl\", submodelUrl);\n\nmsg.url = submodelUrl;\nreturn msg;\n\n\nfunction base64urlEncode(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError('Input must be a string');\n    }\n \n    return Buffer.from(str, 'utf-8')\n        .toString('base64')\n        .replace(/\\+/g, '-')  // Replace '+' with '-'\n        .replace(/\\//g, '_')  // Replace '/' with '_'\n        .replace(/=+$/, '');  // Remove padding '='\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 80,
        "wires": [
            [
                "7a97c2bad011d989"
            ]
        ]
    },
    {
        "id": "5893922182fae339",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "setProperties",
        "func": "msg.changeTitle = msg.payload.changeTitle;\nmsg.changeDetail = msg.payload.changeDetail;\nmsg.changeReason = msg.payload.changeReason;\n\nmsg.url = global.get(\"submodelUrl\") + \"/submodel-elements/Records\";\nmsg.headers = {\n    \"ApiKey\": global.get(\"apiKey\")\n};\n\nmsg.id = global.get(\"submodelId\");\n\n// Set properties as const for the flow \nflow.set(\"url\", msg.url);\nflow.set(\"headers\", msg.headers);\nflow.set(\"id\", msg.id);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 580,
        "wires": [
            [
                "cca9b79ca47e1804"
            ]
        ]
    },
    {
        "id": "38d1e2eff9d08cf7",
        "type": "function",
        "z": "2170ab3b2dc23946",
        "name": "setProperties",
        "func": "msg.changeTitle = msg.payload.changeTitle;\nmsg.changeDetail = msg.payload.changeDetail;\nmsg.changeReason = msg.payload.changeReason;\n\nmsg.url = global.get(\"submodelUrl\") + \"/submodel-elements/Records\";\nmsg.headers = {\n    \"ApiKey\": global.get(\"apiKey\")\n};\n\nmsg.id = global.get(\"submodelId\");\n\n// Set properties as const for the flow \nflow.set(\"url\", msg.url);\nflow.set(\"headers\", msg.headers);\nflow.set(\"id\", msg.id);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 800,
        "wires": [
            [
                "75c2848d0814c70b"
            ]
        ]
    },
    {
        "id": "be63c50d48eabb1f",
        "type": "debug",
        "z": "2170ab3b2dc23946",
        "name": "PCN records",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 680,
        "wires": []
    },
    {
        "id": "2d99e34f4162648d",
        "type": "http request",
        "z": "7f19a558fb347076",
        "name": "GET /shells",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mnestix-basyx-repo-b36325a9.azurewebsites.net/shells",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 160,
        "wires": [
            [
                "ca9fc719f29afd12"
            ]
        ]
    },
    {
        "id": "06b9034e2e25c174",
        "type": "inject",
        "z": "7f19a558fb347076",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 160,
        "wires": [
            [
                "2d99e34f4162648d"
            ]
        ]
    },
    {
        "id": "7801cf0d2b2822e7",
        "type": "http request",
        "z": "7f19a558fb347076",
        "name": "GET /shells/{ebike}",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mnestix-basyx-repo-b36325a9.azurewebsites.net/shells/aHR0cHM6Ly9tZXRhLWxldmVsLmRlL2lkcy9hYXMvNzAzNV8zOTEzXzc1OTFfNjYwMg ",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "ApiKey",
                "valueType": "other",
                "valueValue": "A5Z2w$@S%>0M"
            }
        ],
        "x": 530,
        "y": 300,
        "wires": [
            [
                "ca9fc719f29afd12"
            ]
        ]
    },
    {
        "id": "9015f24c72d6453d",
        "type": "http request",
        "z": "7f19a558fb347076",
        "name": "GET /submodels",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mnestix-basyx-repo-b36325a9.azurewebsites.net/submodels/aHR0cHM6Ly9tZXRhLWxldmVsLmRlL2lkcy9zbS8xODk3XzI1MzdfNTk3Ml8yMjYy",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 400,
        "wires": [
            [
                "ca9fc719f29afd12"
            ]
        ]
    },
    {
        "id": "4e48fa255605be20",
        "type": "comment",
        "z": "7f19a558fb347076",
        "name": "Shells access test",
        "info": "",
        "x": 270,
        "y": 120,
        "wires": []
    },
    {
        "id": "c7e6944fdddf10ca",
        "type": "inject",
        "z": "7f19a558fb347076",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 300,
        "wires": [
            [
                "7801cf0d2b2822e7"
            ]
        ]
    },
    {
        "id": "3cbdd07b42209eb1",
        "type": "comment",
        "z": "7f19a558fb347076",
        "name": "E-Bike Shell",
        "info": "",
        "x": 250,
        "y": 240,
        "wires": []
    },
    {
        "id": "96b7e0505ec13d21",
        "type": "comment",
        "z": "7f19a558fb347076",
        "name": "E-Bike PCN Submodel",
        "info": "",
        "x": 280,
        "y": 360,
        "wires": []
    },
    {
        "id": "f9cee72cedc5ab75",
        "type": "inject",
        "z": "7f19a558fb347076",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 400,
        "wires": [
            [
                "9015f24c72d6453d"
            ]
        ]
    },
    {
        "id": "ca9fc719f29afd12",
        "type": "debug",
        "z": "7f19a558fb347076",
        "name": "GET request debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 260,
        "wires": []
    },
    {
        "id": "9ceef4f6ef5fc97a",
        "type": "http request",
        "z": "7f19a558fb347076",
        "name": "GET /submodels",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mnestix-basyx-repo-b36325a9.azurewebsites.net/submodels/aHR0cHM6Ly9tZXRhLWxldmVsLmRlL2lkcy9zbS8xODk3XzI1MzdfNTk3Ml8yMjYy/submodel-elements",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 820,
        "wires": [
            [
                "b37e84f5c3a65a78"
            ]
        ]
    },
    {
        "id": "5243137c673630f5",
        "type": "comment",
        "z": "7f19a558fb347076",
        "name": "E-Bike Broker Information",
        "info": "",
        "x": 290,
        "y": 780,
        "wires": []
    },
    {
        "id": "a2b21441928c7695",
        "type": "inject",
        "z": "7f19a558fb347076",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 820,
        "wires": [
            [
                "9ceef4f6ef5fc97a"
            ]
        ]
    },
    {
        "id": "b37e84f5c3a65a78",
        "type": "function",
        "z": "7f19a558fb347076",
        "name": "extractBrokerInformation",
        "func": "// Url: idShort = \"EndpointMqtt\"\nmsg.url = msg.payload.result[0].value[0].value;\n\n// Topic: idShort = \"PcnEventsOutgoing\"\nmsg.topic = msg.payload.result[1].messageTopic;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 820,
        "wires": [
            [
                "ca9fc719f29afd12"
            ]
        ]
    },
    {
        "id": "bc34ccb96f007554",
        "type": "http request",
        "z": "7f19a558fb347076",
        "name": "GET /submodels/.../BrokerInformation",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mnestix-basyx-repo-b36325a9.azurewebsites.net/submodels/aHR0cHM6Ly9tZXRhLWxldmVsLmRlL2lkcy9zbS8xODk3XzI1MzdfNTk3Ml8yMjYy/submodel-elements/BrokerInformation",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 620,
        "wires": [
            [
                "ca9fc719f29afd12"
            ]
        ]
    },
    {
        "id": "caf96b38da257649",
        "type": "comment",
        "z": "7f19a558fb347076",
        "name": "E-Bike Broker Information (by submodel-elements/idShort)",
        "info": "",
        "x": 390,
        "y": 560,
        "wires": []
    },
    {
        "id": "afaef83687f12ac6",
        "type": "inject",
        "z": "7f19a558fb347076",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 620,
        "wires": [
            [
                "bc34ccb96f007554"
            ]
        ]
    },
    {
        "id": "18d898c3bfc58570",
        "type": "http request",
        "z": "7f19a558fb347076",
        "name": "GET /submodels/.../PcnEventsOutgoing",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mnestix-basyx-repo-b36325a9.azurewebsites.net/submodels/aHR0cHM6Ly9tZXRhLWxldmVsLmRlL2lkcy9zbS8xODk3XzI1MzdfNTk3Ml8yMjYy/submodel-elements/PcnEventsOutgoing",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 600,
        "y": 680,
        "wires": [
            [
                "ca9fc719f29afd12"
            ]
        ]
    },
    {
        "id": "18a71b0d78fb8fce",
        "type": "inject",
        "z": "7f19a558fb347076",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 680,
        "wires": [
            [
                "18d898c3bfc58570"
            ]
        ]
    },
    {
        "id": "f76c117d9f14a2c8",
        "type": "mqtt in",
        "z": "e6e863e59445af5d",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3ab993690910a0e8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 120,
        "wires": [
            [
                "d2a20e5ac3dad952"
            ]
        ]
    },
    {
        "id": "d2a20e5ac3dad952",
        "type": "debug",
        "z": "e6e863e59445af5d",
        "name": "MQTT output debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 120,
        "wires": []
    },
    {
        "id": "164b14d05bc19a56",
        "type": "comment",
        "z": "e6e863e59445af5d",
        "name": "MQTT Subscription",
        "info": "",
        "x": 270,
        "y": 80,
        "wires": []
    },
    {
        "id": "da5fdda9eeda75de",
        "type": "inject",
        "z": "e6e863e59445af5d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"pcn\":\"test\",\"submodel\":\"Reference\"}",
        "payloadType": "json",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "3b58b11c323436f1"
            ]
        ]
    },
    {
        "id": "3b58b11c323436f1",
        "type": "json",
        "z": "e6e863e59445af5d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 470,
        "y": 260,
        "wires": [
            [
                "70b17d1f9a69f965",
                "26b650a3847aa4a1"
            ]
        ]
    },
    {
        "id": "70b17d1f9a69f965",
        "type": "debug",
        "z": "e6e863e59445af5d",
        "name": "MQTT test message debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 200,
        "wires": []
    },
    {
        "id": "1201f7fcb7ddb37a",
        "type": "comment",
        "z": "e6e863e59445af5d",
        "name": "MQTT update message test",
        "info": "",
        "x": 300,
        "y": 220,
        "wires": []
    },
    {
        "id": "26b650a3847aa4a1",
        "type": "mqtt out",
        "z": "e6e863e59445af5d",
        "name": "",
        "topic": "oi4-bike_de_ids_asset_9202_4872_3095_1328",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3ab993690910a0e8",
        "x": 800,
        "y": 260,
        "wires": []
    }
]